module Main;

var
   deck	   : array {math} 10 of integer;
   i, j	   : integer;
   d, p    : integer;

procedure partitions(cards: array {math} 10 of integer; subtotal: integer): integer;
var
  i, total : integer;
  m : integer;
begin
  m := 0;
  (* Hit *)
  for i := 0 to 9 do
    if (cards[i]>0) then
      total := subtotal+i+1;
      if (total < 21) then
        (* Stand *)
        m := m+1;
        (* Hit again *)
        cards[i] := cards[i]-1;
        m := m+partitions(cards, total);
        cards[i] := cards[i]+1;
      elsif (total=21) then
        (* Stand; hit again is an automatic bust *)
	 m := m+1;
      end;
    end;
  end;
  return m;
end partitions;
    
begin
  deck := [4,4,4,4,4,4,4,4,4,16];
  d := 0;
  for i := 0 to 9 do
    (* Dealer showing *)
    deck[i] := deck[i]-1;
    p := 0;
    for j := 0 to 9 do
      deck[j] := deck[j]-1;
      p := p+partitions(deck, j+1);
      deck[j] := deck[j]+1;
    end;
    writeln("Dealer showing ",i:1," partitions = ",p:6);
    d := d+p;
    deck[i] := deck[i]+1;
  end;
  writeln("Total partitions = ",d:6);
end Main.
